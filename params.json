{"name":"Php-trait-sandbox","body":"Just some experiments with PHP's traits.\r\n========================================\r\n\r\nBasic Traits\r\n------\r\n### GetSet\r\n\r\nAutomatically handles get/set methods for your class _provided you have created the class member_.\r\n\r\n    class foo {\r\n        use GetSet;\r\n        protected $bar;\r\n    }\r\n    (new foo())->setBar(1)->getBar(); // 1\r\n\r\n### Logger\r\n\r\nClass-specific logging with a unified directory & filename structure.\r\n\r\n    class foo {\r\n        use Logger;\r\n    }\r\n    (new foo())->Log('ok');         // logs \"[date] ok\" to ./Logger/foo/default.log\r\n    foo::LogStatic('ok', 'test');   // logs \"[date] ok\" to ./Logger/foo/test.log\r\n\r\n### Singleton\r\n\r\nFor when you absolutely, positively, can only have 1 of an object. _Maybe._\r\n\r\n    class foo {\r\n        use Singleton;\r\n    }\r\n    foo::getInstance(); // now what?","tagline":"Abusing PHP 5.4's traits","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}